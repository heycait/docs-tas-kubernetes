---
title: Preparing the Kubernetes Cluster
owner: Tanzu Application Service Release Engineering
---

This topic describes how to create and configure Kubernetes clusters to support Tanzu Application Service for Kubernetes.


## <a id='enterprise-pks'></a> VMware Enterprise PKS

Ensure you have a Kubernetes cluster created with the following characteristics:

* The PKS version should be v1.6 or v1.7.
* The Kubernetes cluster should have at least 5 worker nodes.
* Each worker node should have at least 2 CPU and 7.5 GB of memory available for allocation.
* The worker nodes in the Kubernetes cluster should trust the container image registry that Tanzu Application Service for Kubernetes will use to store buildpack-based app images. If the registry has a certificate issued from a private certificate authority (CA), this typically entails configuring the worker nodes in the Kubernetes cluster to trust the certificate of that CA.

See the [Creating Clusters](https://docs.pivotal.io/pks/create-cluster.html) topic for information about creating a cluster with Enterprise PKS.

After creating the cluster, run `pks get-credentials CLUSTER-NAME` to ensure that `kubectl` targets the cluster.

## <a id='grid'></a> VMware Tanzu Kubernetes Grid

Ensure you have a Kubernetes cluster created with the following characteristics:

* The Tanzu Kubernetes Grid version should be 1.0 or higher.
* The Kubernetes cluster should have at least 5 worker nodes.
* Each worker node should have at least 2 CPU and 7.5 GB of memory available for allocation.
* The worker nodes in the Kubernetes cluster should trust the container image registry that Tanzu Application Service for Kubernetes will use to store buildpack-based app images. If the registry has a certificate issued from a private certificate authority (CA), this typically entails configuring the worker nodes in the Kubernetes cluster to trust the certificate of that CA.
* TKG does not bundle `metrics-server`, which is required by Tanzu Application Service.
  To deploy it, run:

	<pre><code>$ kubectl apply -f https://github.com/kubernetes-sigs/metrics-server/releases/download/v0.3.6/components.yaml</code></pre>

See the [Installing Tanzu Kubernetes Grid](https://docs.vmware.com/en/VMware-Tanzu-Kubernetes-Grid/1.0/vmware-tanzu-kubernetes-grid-10/GUID-install-tkg-index.html) for information about setting up TKG

After creating the cluster, run `tkg get credentials CLUSTER-NAME` to get the context name and `kubectl config use-context CONTEXT-NAME` to ensure that `kubectl` targets the cluster.

## <a id='configuring-vsphere-storage'></a> Configuring Default Storage

Tanzu Application Service for Kubernetes requires the Kubernetes cluster to provide persistent volumes
for its internal PostgreSQL database and Minio blobstore.

To check whether your Kubernetes cluster already has a default storage class installed:

1. Retrieve the list of StorageClass resources in the cluster:
  <pre><code>$ kubectl get storageclass</code></pre>
  For example:
  <pre><code>$ kubectl get storageclass
NAME             PROVISIONER                    AGE
thin (default)   kubernetes.io/vsphere-volume   34h
</code></pre>

1. If the list includes an entry for which `(default)` follows the storage class name, then the Kubernetes cluster has a default storage class installed already, and you are ready to provision volumes dynamically.

If the list does not include a default, you must install one before deploying Tanzu Application Service for Kubernetes.
See the [Configuring Default Storage](configuring-default-storage.html) topic for information about configuring the default storage class.

## <a id='deploying-tas-kubernetes'></a> Next: Configuring Tanzu Application Service for Kubernetes Installation Values

Once you have completed the preparatory steps above, proceed to [configure Tanzu Application Service for Kubernetes](configuring-installation-values.html) for installation to the Kubernetes cluster.
