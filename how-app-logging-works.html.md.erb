---
title: How App Logging Works
owner: PAS WOK
---

This topic describes how Loggregator delivers logs from the Kubernetes app instance pods to app developers
in Pivotal Application Service (PAS) for Kubernetes.

## <a id='system-components'></a> System Components

The PAS for Kubernetes tile uses a DaemonSet to deploy Loggregator system components to each Kubernetes worker node. Each pod in this DaemonSet contains two containers:

- The `loggregator-agent` container contains the same Loggregator agent that runs as a BOSH-deployed job on the other PAS for Kubernetes VMs. It is configured to connect to the Doppler Loggregator component.

- The `eirini-loggregator-fluentd` container contains fluentd and a plugin that configures fluentd to communicate with the Loggregator agent.

Each pod in the DaemonSet is also configured to have access to the log files of the app instance pods on its worker node.

## <a id='app-log-message-flow'></a> App Log Message Flow

When a PAS for Kubernetes app instance produces a log line, the Loggregator system conveys it to app developers as follows:

- The Docker server writes the log line to a log file for the app instance pod. It also includes some metadata, such as the timestamp and the output stream, stdout or stderr.
- The fluentd process in the local Loggregator pod observes the new entry in the log file, converts it into a Loggregator-formatted message, and emits that message to the local Loggregator agent.
- The Loggregator agent forwards the log message to the Loggregator control plane processes running on BOSH VMs.
- The Loggregator control plane aggregates these log messages and makes them available to clients such as the cf CLI.

For more information about how Loggregator works, see [Loggregator Architecture](https://docs.pivotal.io/pivotalcf/loggregator/architecture.html) in the PAS documentation.

For more information about fluentd, see the [fluentd project site](https://www.fluentd.org/).
