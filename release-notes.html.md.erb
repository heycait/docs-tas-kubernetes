---
title: Release Notes
owner: Tanzu Application Service Release Engineering
---

This topic contains release notes for Tanzu Application Service for Kubernetes.

## <a id='0.1.0'></a> 0.1.0

**Release Date: April 14, 2020**

<%= partial 'evaluation_only' %>

### <a id='features'></a> Features

Key features in this release:

- Supports building and running applications from source via `cf push` using system-provided cloud-native buildpacks for Java, Go, NodeJS, and .NET Core.
- Supports running applications packaged as Docker images.
- Supports routing HTTP traffic to applications.
- Supports retrieving logs from application-instance processes.
- Supports retrieving logs from cloud-native buildpack builds.
- Supports installation to Kubernetes clusters provisioned with VMware Enterprise PKS.
- Uses the [k14s](https://k14s.io) toolchain (ytt, kbld, and kapp) for installation.
- Supports integration with the Harbor container registry, Google Container Registry, and Dockerhub for storing app images.


### <a id='known-issues'></a> Known Issues

- Applications can receive ingress traffic only via HTTP and not HTTPS.
- Retrieving application and buildpack-staging logs via `cf logs` requires CF CLI 6.50.0 or later.
- Buildpack-staging logs are not streamed during `cf push`.
- Application instance logs also include unfiltered logs from the Istio sidecar proxy process, and can be noisy as a result.
- Running `cf restage` fails to re-stage the app.
- The `cf buildpacks` command shows an empty list of buildpacks.
- The CF CLI buildpack-administration commands are not supported.
- App developers cannot select a buildpack for their buildpack-based app.
- Running buildpack-based apps required the `diego_docker` feature flag to be set.
- Upgrading an existing Tanzu Application Service installation to a new version is not supported.
- Re-deploying Tanzu Application Service with different credentials is not supported.
