---
title: Administering TAS for Kubernetes
owner: Tanzu Application Service Release Engineering
---

This topic describes how to administer Tanzu Application Service (TAS) for Kubernetes after initial installation.

<p class="note warning">
  <strong>Warning:</strong> Consult the <a href="release-notes.html#known-issues">Known Issues</a> section for details on limitations of TAS for Kubernetes administration.
</p>


## <a id='orgs-spaces'></a> Create Orgs and Spaces

Developers create and manage their applications and service instances within spaces, and each of spaces belong to an org in the TAS installation. For more information about creating orgs and spaces and granting users access to them, see the [Orgs, Spaces, Roles, and Permissions](https://docs.pivotal.io/platform/application-service/concepts/roles.html) topic in the TAS documentation.


## <a id='quotas'></a> Create Quota Plans

Quota plans are named sets of memory, service, and instance usage quotas that constrain the usage of organizations within a TAS installation.
For more information, see the [Creating and Modifying Quota Plans](https://docs.pivotal.io/platform/application-service/adminguide/quota-plans.html) topic in the TAS documentation.


## <a id='service-brokers'></a> Manage Service Brokers

Developers typically need to connect their web applications running on TAS to dependencies such as data services. Service brokers give developers a self-service mechanism to provision these dependencies and to connect them to their applications. TAS administrators are responsible for registering these service brokers with the TAS installation and exposing their service plans to orgs and spaces.
For more information, see the [Managing Service Brokers](https://docs.pivotal.io/platform/application-service/services/managing-service-brokers.html) topic in the TAS documentation.
