---
title: Configuring the Image Registries
owner: Tanzu Application Service Release Engineering
---

This topic describes how to configure the system image registry values from Tanzu Network container registry, as well as how to configure certain container image registries to store the application images for Tanzu Application Service for Kubernetes.

## <a id='configure-system-registry-values'></a>Configure System Registry Values

Tanzu Application Service for Kubernetes pulls the container images for system components from the [Tanzu Network container registry](https://registry.pivotal.io/), using the credentials from a user registered with [Tanzu Network](https://network.pivotal.io).

To configure Tanzu Application Service for Kubernetes with these values:

1. Change into the `configuration-values` directory you created earlier.

1. Create a file named `system-registry-values.yml` in that directory with the contents below, replacing the placeholder values with the Tanzu Network user credentials you wish to use:

```yaml
#@data/values
---
system_registry:
  hostname: registry.pivotal.io
  username: "PLACEHOLDER-TANZU-NETWORK-REGISTRY-USERNAME"
  password: "PLACEHOLDER-TANZU-NETWORK-REGISTRY-PASSWORD"
```

## <a id='configure-app-registry'></a> Configuring Application Image Registry 
First you need to decide what service to use as your application registry. Our recommendation is to use VMware Harbor Registry. Follow [the instruction below to configure Harbor](#harbor). 

We also included instructions for configuring public container registries in this document. Follow the links to configuring the [Google Container Registry (GCR)](#gcr) or the [Docker Hub](#dockerhub).

### <a id='harbor'></a> VMware Harbor Registry
You'll need to first create a Harbor project and a user account, then retrieve the Harbor CA Certificate, and in the end create the configuration file.

#### <a id='harbor-project-user'></a> Creating a Harbor Project and User Account

These instructions use `PLACEHOLDER-HARBOR-FQDN` to refer to the fully qualified domain name for the Harbor installation.

1. Navigate to `https://PLACEHOLDER-HARBOR-FQDN/` in your browser and log in with your administrative credentials.

1. [Create a new user](https://goharbor.io/docs/1.10/administration/managing-users/create-users-db/) named `tas-app-images-push-pull`. You will need to submit a password for the user you create.

1. [Create a new private project](https://goharbor.io/docs/1.10/working-with-projects/create-projects/) named `tas-app-images`.


Next, add the `tas-app-images-push-pull` user to the `tas-app-images` project:

1. Click on the `tas-app-images` entry in the Projects list and then select the Members tab.

1. Click on the "+ USER" button to open the New Member dialog box.

1. In the Name field on the dialog box, enter `tas-app-images-push-pull`.

1. In the Role field, select the Master option. 

1. Click the OK button on the dialog box to finish adding the user to the project.

For more information on the Master role, see the [Managing Users](https://goharbor.io/docs/1.10/administration/managing-users/) topic in the Harbor documentation.


#### <a id='harbor-ca-cert'></a> Retrieving the Harbor CA Certificate

If you have deployed Harbor using the Ops Manager tile, retrieve the CA certificate or self-signed certificate from the tile configuration:

1. Log into Ops Manager as an administrative user and navigate to the Installation Dashboard.

1. Click on the VMware Harbor Registry tile.

1. Navigate to the Certificate configuration pane and scroll down to the Certificate Authority (CA) field.

If there is a PEM-encoded certificate value present in the CA field, use it as the certificate authority value in the [configuration file section below](#harbor-config-file).


If instead there is no value present in the CA field, the certificate for the Harbor installation was likely issued from the Ops Manager root CA certificate. Retrieve that root CA certificate as follows:

1. In the Ops Manager user interface, drop-down with your user name in the upper-right corner, click on Settings.

1. In the Settings page, click on the Advanced Options pane.

1. In the Advanced Options pane, click on the DOWNLOAD ROOT CA CERT button to download the Ops Manager root CA certificate.

Use this root CA certificate as the certificate authority in the [configuration file section below](#harbor-config-file).


If you did not use the Ops Manager tile to deploy your Harbor installation, contact the administrator for the installation to obtain the CA certificate that issued the Harbor certificate.


#### <a id='harbor-config-file'></a> Creating the Configuration File

To configure Tanzu Application Service for Kubernetes with these values for the application image registry:

1. Change into the `configuration-values` directory you created earlier.

1. Create a file named `app-registry-values.yml` in that directory with the contents below, replacing the placeholder values with:
  * the Harbor fully qualified domain name,
  * the password you submitted for the `tas-app-images-push-pull` user, and
  * the CA certificate or self-signed certificate for Harbor you retrieved above.

    Make sure that each line of the CA certificate value is indented four spaces, to match the `BEGIN CERTIFICATE` and `END CERTIFICATE` lines below.


```yaml
#@data/values
---
app_registry:
  hostname: "PLACEHOLDER-HARBOR-FQDN"
  repository: "PLACEHOLDER-HARBOR-FQDN/tas-app-images"
  username: "tas-app-images-push-pull"
  password: "PLACEHOLDER-APP-REGISTRY-PASSWORD"
  ca: |
    -----BEGIN CERTIFICATE-----
    PLACEHOLDER-CA-CERTIFICATE-CONTENTS
    (make sure each line is indented four spaces)
    -----END CERTIFICATE-----
```

<p class="note">
  <strong>Note:</strong> You may choose different project and user names in the Harbor configuration procedure above as long as you use the same names in the configuration file.
</p>

Once you have created this file, proceed to the 
[Installing Tanzu Application Service for Kubernetes](installing-tas-for-kubernetes.html) topic.


### <a id='gcr'></a> Google Container Registry

You need to first create a service account for GCR, and then create the configuration file.

#### <a id='gcr-service-account'></a> Creating a Service Account for GCR

These steps require that you have the Google Cloud CLI, `gcloud`, installed and configured to target your Google Cloud Platform (GCP) project.

1. Obtain the ID of your current GCP project:
  <pre><code>$ GCP\_PROJECT\_ID=$(gcloud config get-value core/project)</code></pre>

1. Create a service account in your current project:
  <pre><code>$ gcloud iam service-accounts create tas-app-images-push-pull</code></pre>

1. Grant this service account `storage.admin` privileges so that it can push and pull images from GCR:
  <pre><code>$ gcloud projects add-iam-policy-binding $GCP\_PROJECT\_ID \
    --member serviceAccount:tas-app-images-push-pull@${GCP\_PROJECT\_ID}.iam.gserviceaccount.com \
    --role roles/storage.admin</code></pre>

1. Create a private authentication key for this service account and store it in a local file named `gcr-storage-admin.json`:
  <pre><code>$ gcloud iam service-accounts keys create \
  --iam-account "tas-app-images-push-pull@$GCP\_PROJECT\_ID.iam.gserviceaccount.com" \
  gcr-storage-admin.json</code></pre>


#### <a id='gcr-config-file'></a> Creating the Configuration File

To configure Tanzu Application Service for Kubernetes with these values for the application image registry:

1. Change into the `configuration-values` directory you created earlier.

1. Create a file named `app-registry-values.yml` in that directory with the contents below, replacing the placeholder value with the contents of the `gcr-storage-admin.json` authentication key file you created above. Note that the contents of that file should be indented 4 spaces.

```yaml
#@data/values
---
app_registry:
  hostname: gcr.io
  repository: "gcr.io/$GCP_PROJECT_ID/tas-app-images"
  username: "_json_key"
  password: |
    {
      PLACEHOLDER-CONTENTS-OF-SERVICE-ACCOUNT-JSON-KEY
    }
```

Once you have created this file, proceed to the [Installing Tanzu Application Service for Kubernetes](installing-tas-for-kubernetes.html) topic.


### <a id='dockerhub'></a> Docker Hub

To use Docker Hub as a registry for app images, you must first have a user account at Docker Hub. Then you need to create the configuration file.

1. Change into the `configuration-values` directory you created earlier.

1. Create a file named `app-registry-values.yml` in that directory with the contents below, replacing the placeholder values with the username and password of your Docker Hub account. Note that the repository is also the same as the username.

```yaml
#@data/values
---
app_registry:
  hostname: https://index.docker.io/v1/
  repository: "PLACEHOLDER-USERNAME"
  username: "PLACEHOLDER-USERNAME"
  password: "PLACEHOLDER-PASSWORD"
```

Once you have created this file, proceed to the [Installing Tanzu Application Service for Kubernetes](installing-tas-for-kubernetes.html) topic.
