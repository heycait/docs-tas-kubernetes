---
title: Configuring the Application Image Registry
owner: Tanzu Application Service Release Engineering
---

This topic describes how to configure certain container image registries to store the application images for Tanzu Application Service for Kubernetes.


## <a id='harbor'></a> VMware Harbor Registry

These instructions assume that your Harbor registry is accessible at `https://HARBOR-FQDN/`, where `HARBOR-FQDN` is the fully qualified domain name for the Harbor installation.

1. Navigate to `https://HARBOR-FQDN/` in your browser and log in with your administrative credentials.

1. [Create a new private project](https://goharbor.io/docs/1.10/working-with-projects/create-projects/) named `tas-app-images`.

1. [Create a new user](https://goharbor.io/docs/1.10/administration/managing-users/create-users-db/) named `tas-app-images-push-pull`.

1. [Grant that user the Master role](https://goharbor.io/docs/1.10/administration/managing-users/) in the `tas-app-images` project.

When you are ready to [configure the app registry values](deploying-tas-for-kubernetes.html#configure-app-registry-values) with this registry and user when deploying Tanzu Application Service for Kubernetes:

* Set the app registry hostname value to the fully qualified domain name of the Harbor registry.
* Set the app registry repository value to `HARBOR-FQDN/tas-app-images`.
* Set the app registry username value to `tas-app-images-push-pull`.
* Set the app registry password value to the password for the `tas-app-images-push-pull` user.
* Set the app registry CA value to the certificate of the CA that issued the Harbor certificate, or the Harbor certificate itself if it is self-signed.

<p class="note">
  <strong>Note:</strong> You may choose different project and user names in the Harbor configuration as long as you apply them consistently in the configuration.
</p>

## <a id='gcr'></a> Google Container Registry

These steps require that you have the Google Cloud CLI, `gcloud`, installed and configured to target your GCP project.

1. Obtain the ID of your current GCP project:
  <pre><code>$ GCP\_PROJECT\_ID=$(gcloud config get-value core/project)</code></pre>

1. Create a service account in your current project:
  <pre><code>$ gcloud iam service-accounts create tas-app-images-push-pull</code></pre>

1. Grant this service account `storage.admin` privileges so that it can push and pull images from GCR:
  <pre><code>$ gcloud projects add-iam-policy-binding $GCP\_PROJECT\_ID \
    --member serviceAccount:tas-app-images-push-pull@${GCP\_PROJECT\_ID}.iam.gserviceaccount.com \
    --role roles/storage.admin</code></pre>

1. Create a private authentication key for this service account and store it in a local file named `gcr-storage-admin.json`:
  <pre><code>$ gcloud iam service-accounts keys create \
  --iam-account "tas-app-images-push-pull@$GCP\_PROJECT\_ID.iam.gserviceaccount.com" \
  gcr-storage-admin.json</code></pre>

When you are ready to [configure the app registry values](deploying-tas-for-kubernetes.html#configure-app-registry-values) with GCR and this service account when deploying Tanzu Application Service for Kubernetes:

* Set the app registry hostname value to `gcr.io`.
* Set the app registry repository value to `gcr.io/$GCP_PROJECT_ID/tas-app-images`.
* Set the app registry username value to `_json_key`.
* Set the app registry password value the contents of the `gcr-storage-admin.json` file.
* Leave the app registry CA value unset, or set it to an empty string.


## <a id='dockerhub'></a> Dockerhub

To use Dockerhub as a registry for app images, you must have a user account at Dockerhub.

When you are ready to [configure the app registry values](deploying-tas-for-kubernetes.html#configure-app-registry-values) with Dockerhub and this user when deploying Tanzu Application Service for Kubernetes:

* Set the app registry hostname value to `https://index.docker.io/v1/`.
* Set the app registry repository value to the account username.
* Set the app registry username value to the account username.
* Set the app registry password value to the account password.
* Leave the app registry CA value unset, or set it to an empty string.
